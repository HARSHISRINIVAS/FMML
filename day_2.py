# -*- coding: utf-8 -*-
"""DAY_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10_GECqaBtT-r1tFCux7_5GB5IW8vG35A
"""

!wget https://www.gutenberg.org/files/11/11-0.txt  #download files and interact with REST APIs.

fp1 = open('11-0.txt', 'r')

file_buffer = fp1.read() # fp1.read() will return content of the file.

len(file_buffer) #by using the len we can find the length of the file

file_buffer

file_buffer = file_buffer.lower() #convert all upper case letters to lower case letters

file_buffer

fp2 = open('word_file.txt', 'w')

for each_char in file_buffer:
  if each_char >= 'a' and each_char <='z':
    fp2.write(each_char)
  else:
    fp2.write(' ')

fp1.close() #fp1.close doesn't do anything that takes no parameters you still need to say fp1.close()
fp2.close()

fp3 = open('word_file.txt', 'r')

word_buffer = fp3.read() # returns the specified number of bytes from the file

len(word_buffer)

word_buffer

word_list  = word_buffer.split() # split() method splits a string into a list.

len(word_list)

import collections as cc #CC import window is a checkbox to add the images you are importing to a collection.

word_collect = cc.Counter(word_list) #CC import window is a checkbox to add the images you are importing to a collection.

word_collect

word_collect = dict(word_collect) #creates a dictionary. A dictionary is a collection which is unordered, changeable and indexed.

type(word_collect)

pruned_word_collect = {i:j for i,j in word_collect.items() if len(i) > 3}

len(pruned_word_collect)

x = dict(pruned_word_collect).keys()
y = dict(pruned_word_collect).values()

pruned_word_collect = dict(pruned_word_collect)

import matplotlib.pyplot as plt ##it is a collection of command style functions like creates a figure, creates a plotting area

plt.plot(list(x), list(y))
plt.plot()

high_freq_dict = {i:j for i, j in pruned_word_collect.items() if j > 100}

x = dict(high_freq_dict).keys()
y = dict(high_freq_dict).values()

plt.plot(list(x), list(y))
plt.show()