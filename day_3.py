# -*- coding: utf-8 -*-
"""DAY_3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vOHiKwGZCySQ5j9mBvgYtfwIGvLDd_Di
"""

import numpy as np #numpy is known as numeric values of python
import matplotlib.pyplot as plt #it is a collection of command style functions like creates a figure, creates a plotting area 
import cv2 as cv #cross validation used for data to make predictions 
from google.colab.patches import cv2_imshow #used to display an image in a window.

test_data = np.arange(1,10,3)

test_data = np.linspace(1,10,20)+np.random.rand(20) #np.linespace used for creating numeric sequences and np.random.rand creates an array of specified shape and fills it with random values.

test_data

test_data.dtype #dtype is known as data type of a test data

test_data.ndim #dim is known is known as dimention oa the data

plt.plot(np.sin(test_data),color='green') # used for ploting the data values in graphical way of sin curve by the color of red our wish
plt.plot(np.cos(test_data),color='red') # used for ploting the data values in graphical way of cos curve by the color of red our wish
plt.savefig('noisysineandcosin.jpg') #method is used to save the figure created after plotting data.

!wget https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Queen_Elizabeth_II_in_March_2015.jpg/1200px-Queen_Elizabeth_II_in_March_2015.jpg #by using !wget

!mv 1200* queen.jpg #!mv used for  moving a file or directory to a new directory without changing the name

image_data = cv.imread('queen.jpg',1) #loads an image from the specified file

rows, cols, channels = image_data.shape

print (rows, cols, channels)

print(image_data)

two_horizontal_queen= np.hstack((image_data, image_data)) #function is used to stack the sequence of input arrays horizontally (i.e. column wise) to make a single array.

cv2_imshow(two_horizontal_queen) #used to display an image in a window.
cv.imwrite('two_queen.jpg',two_horizontal_queen) #saves the image to the specified file.

slice_portion = two_horizontal_queen[0:rows, 0:cols, 0:channels]

slice_portion.size

slice_portion.shape

cv2_imshow(slice_portion) #used to display an image in a window.

blurred_slice_portion = cv.blur(slice_portion,(20,10))

cv2_imshow(blurred_slice_portion)

cv2_imshow(two_horizontal_queen) #used to display an image in a window.

two_horizontal_queen[0:rows, 0:cols, 0:channels] = blurred_slice_portion

cv2_imshow(two_horizontal_queen) #used to display an image in a window.